from telegram import (
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButton,
)

from typing import List

from tgbot.models import Filter, FilterTriggerTemplate


def filters_keyboard(filters: List[Filter], rule=None) -> InlineKeyboardMarkup:
    buttons = []

    for filter_ in filters:
        buttons.append(
            [
                InlineKeyboardButton(
                    f"{'üü¢' if filter_.is_active else 'üî¥'} [{filter_.name if filter_.name else filter_.id}]",
                    callback_data=f"filter:{filter_.id}",
                )
            ]
        )

    buttons.append(
        [
            InlineKeyboardButton(
                "üîô –ù–∞–∑–∞–¥",
                callback_data=f"rule:{rule.id}" if rule else "start",
            )
        ]
    )

    return InlineKeyboardMarkup(buttons)


def filter_keyboard(filter_: Filter) -> InlineKeyboardMarkup:
    buttons = [
        [
            InlineKeyboardButton(
                "üóë –£–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä",
                callback_data=f"delete:filter:{filter_.id}",
            )
        ],
        [
            InlineKeyboardButton(
                "–û—Ç–∫–ª—é—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä" if filter_.is_active else "–í–∫–ª—é—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä",
                callback_data=f"toggle:filter:0:{filter_.id}" if filter_.is_active else f"toggle:filter:1:{filter_.id}",
            )
        ],
        [
            InlineKeyboardButton(
                "üîô –ù–∞–∑–∞–¥",
                callback_data="start",
            )
        ],
    ]

    return InlineKeyboardMarkup(buttons)


def add_filter_trigger_keyboard(
    trigger_templates: List[FilterTriggerTemplate],
) -> InlineKeyboardMarkup:
    buttons = []

    for trigger_template in trigger_templates:
        buttons.append(
            [
                InlineKeyboardButton(
                    trigger_template.name,
                    callback_data=f"add_filter_trigger:{trigger_template.id}",
                )
            ]
        )

    buttons.append(
        [
            InlineKeyboardButton(
                "–û—Ç–º–µ–Ω–∞",
                callback_data="cancel",
            )
        ]
    )

    return InlineKeyboardMarkup(buttons)


def add_filter_action_keyboard() -> InlineKeyboardMarkup:
    buttons = [
        InlineKeyboardButton("–ó–∞–º–µ–Ω–∏—Ç—å", callback_data="add_filter_action:R"),
        InlineKeyboardButton(
            "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="add_filter_action:S"
        ),
        InlineKeyboardButton("–í—ã–∫–ª—é—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª–æ", callback_data="add_filter_action:D"),
        InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="cancel"),
    ]

    return InlineKeyboardMarkup.from_column(buttons)


def add_filter_replace_keyboard() -> InlineKeyboardMarkup:
    buttons = [
        InlineKeyboardButton("–£–î–ê–õ–ò–¢–¨", callback_data="delete"),
    ]

    return InlineKeyboardMarkup.from_column(buttons)


def add_filter_confirm_keyboard() -> InlineKeyboardMarkup:
    buttons = [
        InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="add_filter_confirm"),
        InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="cancel"),
    ]

    return InlineKeyboardMarkup.from_column(buttons)
